- category: ast_execution
  sub-category: classic
  tests:
    - command: ""
    - command: "echo coucou"
    - command: "ls"
    - command: "echo coucou; echo ahhhh; echo bbbbb"
    - command: "echo coucou; ! echo ahhh"

- category: ast_evaluation
  sub-category: condition
  tests:
    - command: "! true"
    - command: "! echo coucou"
    - command: "echo coucou && echo aaaaa"
    - command: "echo coucou || echo aaaaa"
    - command: "true && echo coucou"
    - command: "false && echo coucou"
    - command: "true || echo coucou"
    - command: "false || echo coucou"
    - command: "true && echo coucou || echo aaaaa"
    - command: "true || echo coucou && echo aaaaa"
    - command: "! false && echo coucou"

- category: ast_evaluation
  sub-category: loop
  tests:
    - command: "while false; do echo coucou; done"
    - command: "until true; do echo coucou; done"
    - command: "while ! echo coucou; do echo ahhhh; done"
    - command: "rm test.txt; until cat test.txt; do echo coucou > test.txt; done; rm test.txt"
    - command: "touch test.txt; while cat test.txt; rm test.txt; done"
    - command: "touch test.txt; while cat test.txt; do echo coucou; rm test.txt; done"
    - command: "rm test.txt; until cat test.txt; do touch test.txt; echo coucou; done"
    #- command: "for i; do echo coucou; done"
    - command: "for i in; do echo coucou; done"
    - command: "for i in a b c; do echo coucou; done"

- category: ast_evaluation
  sub-category: assignment
  tests:
    - command: "B=4"
    - command: "B=4 echo > test.txt coucou"
    - command: "B=5 A=6"

- command: ast_evaluation
  sub-category: function
  tests:
    - command: fun () { echo coucou; }; fun
    - command: fun () { echo coucou; }; fun; fun () { echo bbbbb; }; fun
    - command: fun () if true; then echo coucou; fi; fun
    - command: fun () if true; then echo coucou; fi; fun () if true; then echo aaaaa; fi; fun
    - command: fun () { echo coucou; fbeig; echo ahhh; }; fun; echo $?
    - command: fun () { echo $1; }; fun a
    - command: fun () { echo $1 $2; }; fun a; fun b c
    - command: fun () { echo $# $2; }; fun a; fun b c
